// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class AssetPriceUpdated extends EthereumEvent {
  get params(): AssetPriceUpdated__Params {
    return new AssetPriceUpdated__Params(this);
  }
}

export class AssetPriceUpdated__Params {
  _event: AssetPriceUpdated;

  constructor(event: AssetPriceUpdated) {
    this._event = event;
  }

  get _asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EthPriceUpdated extends EthereumEvent {
  get params(): EthPriceUpdated__Params {
    return new EthPriceUpdated__Params(this);
  }
}

export class EthPriceUpdated__Params {
  _event: EthPriceUpdated;

  constructor(event: EthPriceUpdated) {
    this._event = event;
  }

  get _price(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProphecySubmitted extends EthereumEvent {
  get params(): ProphecySubmitted__Params {
    return new ProphecySubmitted__Params(this);
  }
}

export class ProphecySubmitted__Params {
  _event: ProphecySubmitted;

  constructor(event: ProphecySubmitted) {
    this._event = event;
  }

  get _sybil(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _asset(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _sybilProphecy(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _oracleProphecy(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class GenericOracleI extends SmartContract {
  static bind(address: Address): GenericOracleI {
    return new GenericOracleI("GenericOracleI", address);
  }

  getAssetPrice(_asset: Address): BigInt {
    let result = super.call("getAssetPrice", [
      EthereumValue.fromAddress(_asset)
    ]);

    return result[0].toBigInt();
  }

  try_getAssetPrice(_asset: Address): CallResult<BigInt> {
    let result = super.tryCall("getAssetPrice", [
      EthereumValue.fromAddress(_asset)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  getEthUsdPrice(): BigInt {
    let result = super.call("getEthUsdPrice", []);

    return result[0].toBigInt();
  }

  try_getEthUsdPrice(): CallResult<BigInt> {
    let result = super.tryCall("getEthUsdPrice", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }
}
