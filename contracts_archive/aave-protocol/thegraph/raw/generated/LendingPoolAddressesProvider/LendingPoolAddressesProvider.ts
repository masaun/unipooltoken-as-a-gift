// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class EthereumAddressUpdated extends EthereumEvent {
  get params(): EthereumAddressUpdated__Params {
    return new EthereumAddressUpdated__Params(this);
  }
}

export class EthereumAddressUpdated__Params {
  _event: EthereumAddressUpdated;

  constructor(event: EthereumAddressUpdated) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FeeProviderUpdated extends EthereumEvent {
  get params(): FeeProviderUpdated__Params {
    return new FeeProviderUpdated__Params(this);
  }
}

export class FeeProviderUpdated__Params {
  _event: FeeProviderUpdated;

  constructor(event: FeeProviderUpdated) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LendingPoolConfiguratorUpdated extends EthereumEvent {
  get params(): LendingPoolConfiguratorUpdated__Params {
    return new LendingPoolConfiguratorUpdated__Params(this);
  }
}

export class LendingPoolConfiguratorUpdated__Params {
  _event: LendingPoolConfiguratorUpdated;

  constructor(event: LendingPoolConfiguratorUpdated) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LendingPoolCoreUpdated extends EthereumEvent {
  get params(): LendingPoolCoreUpdated__Params {
    return new LendingPoolCoreUpdated__Params(this);
  }
}

export class LendingPoolCoreUpdated__Params {
  _event: LendingPoolCoreUpdated;

  constructor(event: LendingPoolCoreUpdated) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LendingPoolDataProviderUpdated extends EthereumEvent {
  get params(): LendingPoolDataProviderUpdated__Params {
    return new LendingPoolDataProviderUpdated__Params(this);
  }
}

export class LendingPoolDataProviderUpdated__Params {
  _event: LendingPoolDataProviderUpdated;

  constructor(event: LendingPoolDataProviderUpdated) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LendingPoolLiquidationManagerUpdated extends EthereumEvent {
  get params(): LendingPoolLiquidationManagerUpdated__Params {
    return new LendingPoolLiquidationManagerUpdated__Params(this);
  }
}

export class LendingPoolLiquidationManagerUpdated__Params {
  _event: LendingPoolLiquidationManagerUpdated;

  constructor(event: LendingPoolLiquidationManagerUpdated) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LendingPoolManagerUpdated extends EthereumEvent {
  get params(): LendingPoolManagerUpdated__Params {
    return new LendingPoolManagerUpdated__Params(this);
  }
}

export class LendingPoolManagerUpdated__Params {
  _event: LendingPoolManagerUpdated;

  constructor(event: LendingPoolManagerUpdated) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LendingPoolParametersProviderUpdated extends EthereumEvent {
  get params(): LendingPoolParametersProviderUpdated__Params {
    return new LendingPoolParametersProviderUpdated__Params(this);
  }
}

export class LendingPoolParametersProviderUpdated__Params {
  _event: LendingPoolParametersProviderUpdated;

  constructor(event: LendingPoolParametersProviderUpdated) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LendingPoolUpdated extends EthereumEvent {
  get params(): LendingPoolUpdated__Params {
    return new LendingPoolUpdated__Params(this);
  }
}

export class LendingPoolUpdated__Params {
  _event: LendingPoolUpdated;

  constructor(event: LendingPoolUpdated) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LendingRateOracleUpdated extends EthereumEvent {
  get params(): LendingRateOracleUpdated__Params {
    return new LendingRateOracleUpdated__Params(this);
  }
}

export class LendingRateOracleUpdated__Params {
  _event: LendingRateOracleUpdated;

  constructor(event: LendingRateOracleUpdated) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends EthereumEvent {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PriceOracleUpdated extends EthereumEvent {
  get params(): PriceOracleUpdated__Params {
    return new PriceOracleUpdated__Params(this);
  }
}

export class PriceOracleUpdated__Params {
  _event: PriceOracleUpdated;

  constructor(event: PriceOracleUpdated) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProxyCreated extends EthereumEvent {
  get params(): ProxyCreated__Params {
    return new ProxyCreated__Params(this);
  }
}

export class ProxyCreated__Params {
  _event: ProxyCreated;

  constructor(event: ProxyCreated) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get newAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TokenDistributorUpdated extends EthereumEvent {
  get params(): TokenDistributorUpdated__Params {
    return new TokenDistributorUpdated__Params(this);
  }
}

export class TokenDistributorUpdated__Params {
  _event: TokenDistributorUpdated;

  constructor(event: TokenDistributorUpdated) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LendingPoolAddressesProvider extends SmartContract {
  static bind(address: Address): LendingPoolAddressesProvider {
    return new LendingPoolAddressesProvider(
      "LendingPoolAddressesProvider",
      address
    );
  }

  getAddress(_key: Bytes): Address {
    let result = super.call("getAddress", [EthereumValue.fromFixedBytes(_key)]);

    return result[0].toAddress();
  }

  try_getAddress(_key: Bytes): CallResult<Address> {
    let result = super.tryCall("getAddress", [
      EthereumValue.fromFixedBytes(_key)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  isOwner(): boolean {
    let result = super.call("isOwner", []);

    return result[0].toBoolean();
  }

  try_isOwner(): CallResult<boolean> {
    let result = super.tryCall("isOwner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", []);

    return result[0].toAddress();
  }

  try_owner(): CallResult<Address> {
    let result = super.tryCall("owner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  getLendingPool(): Address {
    let result = super.call("getLendingPool", []);

    return result[0].toAddress();
  }

  try_getLendingPool(): CallResult<Address> {
    let result = super.tryCall("getLendingPool", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  getLendingPoolCore(): Address {
    let result = super.call("getLendingPoolCore", []);

    return result[0].toAddress();
  }

  try_getLendingPoolCore(): CallResult<Address> {
    let result = super.tryCall("getLendingPoolCore", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  getLendingPoolConfigurator(): Address {
    let result = super.call("getLendingPoolConfigurator", []);

    return result[0].toAddress();
  }

  try_getLendingPoolConfigurator(): CallResult<Address> {
    let result = super.tryCall("getLendingPoolConfigurator", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  getLendingPoolDataProvider(): Address {
    let result = super.call("getLendingPoolDataProvider", []);

    return result[0].toAddress();
  }

  try_getLendingPoolDataProvider(): CallResult<Address> {
    let result = super.tryCall("getLendingPoolDataProvider", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  getLendingPoolParametersProvider(): Address {
    let result = super.call("getLendingPoolParametersProvider", []);

    return result[0].toAddress();
  }

  try_getLendingPoolParametersProvider(): CallResult<Address> {
    let result = super.tryCall("getLendingPoolParametersProvider", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  getFeeProvider(): Address {
    let result = super.call("getFeeProvider", []);

    return result[0].toAddress();
  }

  try_getFeeProvider(): CallResult<Address> {
    let result = super.tryCall("getFeeProvider", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  getLendingPoolLiquidationManager(): Address {
    let result = super.call("getLendingPoolLiquidationManager", []);

    return result[0].toAddress();
  }

  try_getLendingPoolLiquidationManager(): CallResult<Address> {
    let result = super.tryCall("getLendingPoolLiquidationManager", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  getLendingPoolManager(): Address {
    let result = super.call("getLendingPoolManager", []);

    return result[0].toAddress();
  }

  try_getLendingPoolManager(): CallResult<Address> {
    let result = super.tryCall("getLendingPoolManager", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  getPriceOracle(): Address {
    let result = super.call("getPriceOracle", []);

    return result[0].toAddress();
  }

  try_getPriceOracle(): CallResult<Address> {
    let result = super.tryCall("getPriceOracle", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  getLendingRateOracle(): Address {
    let result = super.call("getLendingRateOracle", []);

    return result[0].toAddress();
  }

  try_getLendingRateOracle(): CallResult<Address> {
    let result = super.tryCall("getLendingRateOracle", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  getTokenDistributor(): Address {
    let result = super.call("getTokenDistributor", []);

    return result[0].toAddress();
  }

  try_getTokenDistributor(): CallResult<Address> {
    let result = super.tryCall("getTokenDistributor", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }
}

export class RenounceOwnershipCall extends EthereumCall {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends EthereumCall {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class SetLendingPoolImplCall extends EthereumCall {
  get inputs(): SetLendingPoolImplCall__Inputs {
    return new SetLendingPoolImplCall__Inputs(this);
  }

  get outputs(): SetLendingPoolImplCall__Outputs {
    return new SetLendingPoolImplCall__Outputs(this);
  }
}

export class SetLendingPoolImplCall__Inputs {
  _call: SetLendingPoolImplCall;

  constructor(call: SetLendingPoolImplCall) {
    this._call = call;
  }

  get _pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetLendingPoolImplCall__Outputs {
  _call: SetLendingPoolImplCall;

  constructor(call: SetLendingPoolImplCall) {
    this._call = call;
  }
}

export class SetLendingPoolCoreImplCall extends EthereumCall {
  get inputs(): SetLendingPoolCoreImplCall__Inputs {
    return new SetLendingPoolCoreImplCall__Inputs(this);
  }

  get outputs(): SetLendingPoolCoreImplCall__Outputs {
    return new SetLendingPoolCoreImplCall__Outputs(this);
  }
}

export class SetLendingPoolCoreImplCall__Inputs {
  _call: SetLendingPoolCoreImplCall;

  constructor(call: SetLendingPoolCoreImplCall) {
    this._call = call;
  }

  get _lendingPoolCore(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetLendingPoolCoreImplCall__Outputs {
  _call: SetLendingPoolCoreImplCall;

  constructor(call: SetLendingPoolCoreImplCall) {
    this._call = call;
  }
}

export class SetLendingPoolConfiguratorImplCall extends EthereumCall {
  get inputs(): SetLendingPoolConfiguratorImplCall__Inputs {
    return new SetLendingPoolConfiguratorImplCall__Inputs(this);
  }

  get outputs(): SetLendingPoolConfiguratorImplCall__Outputs {
    return new SetLendingPoolConfiguratorImplCall__Outputs(this);
  }
}

export class SetLendingPoolConfiguratorImplCall__Inputs {
  _call: SetLendingPoolConfiguratorImplCall;

  constructor(call: SetLendingPoolConfiguratorImplCall) {
    this._call = call;
  }

  get _configurator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetLendingPoolConfiguratorImplCall__Outputs {
  _call: SetLendingPoolConfiguratorImplCall;

  constructor(call: SetLendingPoolConfiguratorImplCall) {
    this._call = call;
  }
}

export class SetLendingPoolDataProviderImplCall extends EthereumCall {
  get inputs(): SetLendingPoolDataProviderImplCall__Inputs {
    return new SetLendingPoolDataProviderImplCall__Inputs(this);
  }

  get outputs(): SetLendingPoolDataProviderImplCall__Outputs {
    return new SetLendingPoolDataProviderImplCall__Outputs(this);
  }
}

export class SetLendingPoolDataProviderImplCall__Inputs {
  _call: SetLendingPoolDataProviderImplCall;

  constructor(call: SetLendingPoolDataProviderImplCall) {
    this._call = call;
  }

  get _provider(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetLendingPoolDataProviderImplCall__Outputs {
  _call: SetLendingPoolDataProviderImplCall;

  constructor(call: SetLendingPoolDataProviderImplCall) {
    this._call = call;
  }
}

export class SetLendingPoolParametersProviderImplCall extends EthereumCall {
  get inputs(): SetLendingPoolParametersProviderImplCall__Inputs {
    return new SetLendingPoolParametersProviderImplCall__Inputs(this);
  }

  get outputs(): SetLendingPoolParametersProviderImplCall__Outputs {
    return new SetLendingPoolParametersProviderImplCall__Outputs(this);
  }
}

export class SetLendingPoolParametersProviderImplCall__Inputs {
  _call: SetLendingPoolParametersProviderImplCall;

  constructor(call: SetLendingPoolParametersProviderImplCall) {
    this._call = call;
  }

  get _parametersProvider(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetLendingPoolParametersProviderImplCall__Outputs {
  _call: SetLendingPoolParametersProviderImplCall;

  constructor(call: SetLendingPoolParametersProviderImplCall) {
    this._call = call;
  }
}

export class SetFeeProviderImplCall extends EthereumCall {
  get inputs(): SetFeeProviderImplCall__Inputs {
    return new SetFeeProviderImplCall__Inputs(this);
  }

  get outputs(): SetFeeProviderImplCall__Outputs {
    return new SetFeeProviderImplCall__Outputs(this);
  }
}

export class SetFeeProviderImplCall__Inputs {
  _call: SetFeeProviderImplCall;

  constructor(call: SetFeeProviderImplCall) {
    this._call = call;
  }

  get _feeProvider(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeProviderImplCall__Outputs {
  _call: SetFeeProviderImplCall;

  constructor(call: SetFeeProviderImplCall) {
    this._call = call;
  }
}

export class SetLendingPoolLiquidationManagerCall extends EthereumCall {
  get inputs(): SetLendingPoolLiquidationManagerCall__Inputs {
    return new SetLendingPoolLiquidationManagerCall__Inputs(this);
  }

  get outputs(): SetLendingPoolLiquidationManagerCall__Outputs {
    return new SetLendingPoolLiquidationManagerCall__Outputs(this);
  }
}

export class SetLendingPoolLiquidationManagerCall__Inputs {
  _call: SetLendingPoolLiquidationManagerCall;

  constructor(call: SetLendingPoolLiquidationManagerCall) {
    this._call = call;
  }

  get _manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetLendingPoolLiquidationManagerCall__Outputs {
  _call: SetLendingPoolLiquidationManagerCall;

  constructor(call: SetLendingPoolLiquidationManagerCall) {
    this._call = call;
  }
}

export class SetLendingPoolManagerCall extends EthereumCall {
  get inputs(): SetLendingPoolManagerCall__Inputs {
    return new SetLendingPoolManagerCall__Inputs(this);
  }

  get outputs(): SetLendingPoolManagerCall__Outputs {
    return new SetLendingPoolManagerCall__Outputs(this);
  }
}

export class SetLendingPoolManagerCall__Inputs {
  _call: SetLendingPoolManagerCall;

  constructor(call: SetLendingPoolManagerCall) {
    this._call = call;
  }

  get _lendingPoolManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetLendingPoolManagerCall__Outputs {
  _call: SetLendingPoolManagerCall;

  constructor(call: SetLendingPoolManagerCall) {
    this._call = call;
  }
}

export class SetPriceOracleCall extends EthereumCall {
  get inputs(): SetPriceOracleCall__Inputs {
    return new SetPriceOracleCall__Inputs(this);
  }

  get outputs(): SetPriceOracleCall__Outputs {
    return new SetPriceOracleCall__Outputs(this);
  }
}

export class SetPriceOracleCall__Inputs {
  _call: SetPriceOracleCall;

  constructor(call: SetPriceOracleCall) {
    this._call = call;
  }

  get _priceOracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPriceOracleCall__Outputs {
  _call: SetPriceOracleCall;

  constructor(call: SetPriceOracleCall) {
    this._call = call;
  }
}

export class SetLendingRateOracleCall extends EthereumCall {
  get inputs(): SetLendingRateOracleCall__Inputs {
    return new SetLendingRateOracleCall__Inputs(this);
  }

  get outputs(): SetLendingRateOracleCall__Outputs {
    return new SetLendingRateOracleCall__Outputs(this);
  }
}

export class SetLendingRateOracleCall__Inputs {
  _call: SetLendingRateOracleCall;

  constructor(call: SetLendingRateOracleCall) {
    this._call = call;
  }

  get _lendingRateOracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetLendingRateOracleCall__Outputs {
  _call: SetLendingRateOracleCall;

  constructor(call: SetLendingRateOracleCall) {
    this._call = call;
  }
}

export class SetTokenDistributorCall extends EthereumCall {
  get inputs(): SetTokenDistributorCall__Inputs {
    return new SetTokenDistributorCall__Inputs(this);
  }

  get outputs(): SetTokenDistributorCall__Outputs {
    return new SetTokenDistributorCall__Outputs(this);
  }
}

export class SetTokenDistributorCall__Inputs {
  _call: SetTokenDistributorCall;

  constructor(call: SetTokenDistributorCall) {
    this._call = call;
  }

  get _tokenDistributor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTokenDistributorCall__Outputs {
  _call: SetTokenDistributorCall;

  constructor(call: SetTokenDistributorCall) {
    this._call = call;
  }
}
